<Window x:Class="C490_App.MVVM.View.HomeView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:components="clr-namespace:C490_App.Components"
        xmlns:local="clr-namespace:C490_App.MVVM.View"
        xmlns:viewmodel="clr-namespace:C490_App.MVVM.ViewModel"
        ResizeMode="CanResize"
        mc:Ignorable="d"
        Height="500" Width="900"
        Title="HomeView">
    <!--Remove WindowStyle and title For made menu-->


    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions >
            <ColumnDefinition Width="1*"  />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>

        <!--Menu Bar-->
        <!--Note WPF has Menu item-->
        <Menu Grid.ColumnSpan="2">

            <MenuItem Header="_File">
                <MenuItem Header="_Exit" />
            </MenuItem>
            <MenuItem Header="_Tools">
                <MenuItem Header="_Import Experiment Parameters" Command="{Binding imexParams}" CommandParameter="true">
                </MenuItem>
                <MenuItem Header="_Export Experiment Parameters" Command="{Binding imexParams}" CommandParameter="false"/>
            </MenuItem>
            <MenuItem Header="_Save Results" >
            </MenuItem>

            <MenuItem Header="_Debug" Command="{Binding openDebug}" >
            </MenuItem>
        </Menu>
        <!--KCLook into this-->
        <!--<Border Grid.ColumnSpan="2"
        Background="White"
        BorderBrush="Gray"
        BorderThickness="1" VerticalAlignment="Top">

        <Grid HorizontalAlignment="Stretch" Background="Gray" VerticalAlignment="Top">
        <Label Content=""
        Foreground="Gray"
        FontWeight="SemiBold"/>

        <StackPanel HorizontalAlignment="Right"
        Orientation="Horizontal">
        <Button Width="20" Height="20"
        Content="____"
        Background="Transparent"
        BorderThickness="0"
        Foreground="Gray"
        FontWeight="Bold"
        Margin="0,0,0,1"/>
        <Button Width="20" Height="20"
        Content="O"
        Background="Transparent"
        BorderThickness="0"
        Foreground="Gray"
        FontWeight="Bold"/>
        <Button Width="20" Height="20"
        Content="X"
        Background="Transparent"
        BorderThickness="0"
        Foreground="Gray"
        FontWeight="Bold"/>
        </StackPanel>
        </Grid>
        </Border>-->
        <!--End menu bar-->

        <StackPanel Margin="5, 10, 0, 0" Grid.Column="0" Height="Auto" Width="Auto"
                    Grid.Row="1" Grid.RowSpan="3" >
            <Button
                Content="Set LED Parameters"
                FontSize="15"

                Style="{StaticResource HomeButton}"
                Command="{Binding openWindowLED}" Width="200">
            </Button>
            <Button
                Content="Set Experiment Parameters"
                FontSize="15"
                Style="{StaticResource HomeButton}"
                Command="{Binding openWindow}" Width="200">
            </Button>


            <!--Do a new stack panel for check boxes-->
            <CheckBox Margin="10 10 0 0 " Command="{Binding ExperimentCheck}" CommandParameter="cv" FlowDirection="RightToLeft" HorizontalAlignment="Left" IsChecked="{Binding CVModel.isEnabled, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, TargetNullValue=False,NotifyOnSourceUpdated=True}" IsThreeState="False">
                <CheckBox.Resources>
                    <Style TargetType="{x:Type Path}">
                        <Setter Property="FlowDirection" Value="LeftToRight" />
                    </Style>
                </CheckBox.Resources>
                <TextBlock FlowDirection="LeftToRight" FontSize="15" Text="Cyclic Voltammetry" Padding="0 0 75 0"></TextBlock>
            </CheckBox>

            <CheckBox Command="{Binding ExperimentCheck}" CommandParameter="dpv" Margin="10 10 00 0 " FlowDirection="RightToLeft" HorizontalAlignment="Left" IsChecked="{Binding DPVModel.isEnabled,  Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, TargetNullValue=False}">
                <CheckBox.Resources>
                    <Style TargetType="{x:Type Path}">
                        <Setter Property="FlowDirection" Value="LeftToRight" />
                    </Style>
                </CheckBox.Resources>
                <TextBlock FlowDirection="LeftToRight" FontSize="15"  Text="Differential Pulse Voltammetry" Padding="0 0 0 0"></TextBlock>
            </CheckBox>

            <CheckBox Command="{Binding ExperimentCheck}" CommandParameter="ca" Margin="10 10 00 0 " FlowDirection="RightToLeft" HorizontalAlignment="Left" IsChecked="{Binding CAModel.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, TargetNullValue=False,NotifyOnSourceUpdated=True}" IsThreeState="False">
                <CheckBox.Resources>
                    <Style TargetType="{x:Type Path}">
                        <Setter Property="FlowDirection" Value="LeftToRight" />
                    </Style>
                </CheckBox.Resources>
                <TextBlock FlowDirection="LeftToRight" FontSize="15"  Text="Chronoamperometry" Padding="0 0 62 0"></TextBlock>
            </CheckBox>

            <Button
                Content="Start / Stop Experiment"  FontSize="15"
                Style="{StaticResource HomeButton}"
                Command="{Binding serialCommunicate}" Width="200">
            </Button>
            <Button
                Content="View Graph Output" FontSize="15"
                Style="{StaticResource HomeButton}"
                Command="{Binding openGraphResults}" Width="200">
            </Button>

        </StackPanel>

        <!--This is the LedArray, and pot grid
        It will bind itno HomeFrameViewModel, onto its own ViewModel object-->
        <components:LedArray Grid.Column="1" Grid.Row="1" Padding="20" DataContext="{Binding LedArrayViewModel}" />
        <components:PotentioStatSelect Grid.Column="1" Grid.Row="2" Grid.RowSpan="2" Padding="20" DataContext="{Binding PotentiostatViewModel}" />
    </Grid>
</Window>